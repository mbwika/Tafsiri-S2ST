
server {
  listen 80;
  server_name localhost;

  root /usr/share/nginx/html;
  index index.html;

  # React router fallback
  location / {
    try_files $uri /index.html;
  }

  # Proxy to NodeJS backend (e.g., login)
  location /api/ {
    proxy_pass http://backend-nodejs:5000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Proxy to FastAPI backend (e.g., /translate/, /status/, /download/)
  location /translate/ {
    proxy_pass http://backend-fastapi:8000;
  }

  location /status/ {
    proxy_pass http://backend-fastapi:8000;
  }

  location /download/ {
    proxy_pass http://backend-fastapi:8000;
  }
}



# worker_processes 1;

# events { worker_connections 1024; }

# http {
#   include       mime.types;
#   default_type  application/octet-stream;
#   sendfile        on;

#   upstream backend {
#     server backend-nodejs:5000;
#   }

#   server {
#     listen 80;

#     # Serve frontend files
#     location / {
#       root   /usr/share/nginx/html;
#       index  index.html index.htm;
#       try_files $uri $uri/ /index.html;
#     }

#     # Proxy API requests to NodeJS backend
#     location /api/ {
#       proxy_pass http://backend;
#       proxy_http_version 1.1;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#     }
#   }
# }


# server {
#   listen 80;

#   # Serve static React files
#   root /usr/share/nginx/html;
#   index index.html;

#   # Proxy API requests to backend-nodejs container
#   location /api/ {
#     proxy_pass http://backend-nodejs:5000;
#     proxy_http_version 1.1;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#   }

#   # Support React routing (SPA fallback)
#   location / {
#     try_files $uri /index.html;
#   }
# }
