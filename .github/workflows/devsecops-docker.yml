name: TAFSIRI DevSecOps CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  security_scan:
    name: Static Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          pip install bandit
          npm install --prefix frontend --legacy-peer-deps

      - name: Run Bandit (Python Security Scan)
        run: bandit -r backend/

      - name: Run ESLint (JS Security Linting)
        run: npx eslint frontend/ --ext .js,.jsx,.ts,.tsx

      - name: Run Semgrep (Static Code Analysis)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"

      - name: Dependency Security Scan (Snyk)
        uses: snyk/actions/node@master
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Secrets Detection (GitLeaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: ".gitleaks.toml"

  docker_security_scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    needs: security_scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t speech-translator .

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'speech-translator'
          format: 'table'
          exit-code: 1
          severity: 'CRITICAL,HIGH'

  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: docker_security_scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r backend/requirements.txt

      - name: Run Pytest (FastAPI Tests)
        run: pytest backend/tests/

  build_and_deploy:
    name: Build & Deploy Docker Containers
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build & Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/speech-translator:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/speech-translator:latest

      - name: Deploy (Placeholder)
        run: echo "Deploy your container using Kubernetes, AWS ECS, or other platforms"
