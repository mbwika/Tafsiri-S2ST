# Tafsiri-S2ST CI/CD Pipeline with Security Scans and Local Deployment
name: Tafsiri-S2ST CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Backend Job: Handles FastAPI setup, Bandit and Snyk scans
  backend:
    name: Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      # Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup Python 3.11
      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.7'

      # Install Python dependencies
      - name: Install Backend Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Bandit scan for Python security issues
      - name: Install Bandit (Python Security Linter)
        run: pip install bandit

      - name: Run Bandit Security Scan
        run: bandit -r .

      # Install Snyk and authenticate
      - name: Install Snyk CLI
        run: |
          curl -sL https://snyk.io/install | bash
          echo "$HOME/.snyk" >> $GITHUB_PATH

      - name: Authenticate with Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth $SNYK_TOKEN

      # Run Snyk vulnerability test
      - name: Run Snyk Test (Python backend)
        run: snyk test --file=requirements.txt --package-manager=pip

      # Fallback: Run pip-audit if Snyk is not available or fails
      - name: Install pip-audit
        run: pip install pip-audit

      - name: Run pip-audit as fallback
        continue-on-error: true
        run: pip-audit

      # Placeholder for Other tests
      - name: Run Other Tests (if any)
        run: echo "No other tests for now"

  # Frontend Job: Handles React setup and Snyk scanning for Node
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Install Frontend Dependencies
        run: npm install

      - name: Build Frontend
        run: npm run build

      - name: Run Snyk Test (Node.js frontend)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          npm install -g snyk
          snyk auth $SNYK_TOKEN
          snyk test

      # Fallback: Run npm audit if Snyk is not available or fails
      - name: Run npm audit as fallback
        continue-on-error: true
        run: |
          npm audit --audit-level=moderate

  # Build and Push Job: Builds Docker images and runs Snyk container scan
  build-and-deploy:
    name: Build and Run Locally
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    steps:
      # Free up disk space
      - name: Free up disk space
        run: |
          docker system prune -af
          docker volume prune -f
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout Repository
        uses: actions/checkout@v4

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Set up Docker Buildx for advanced builds
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Docker images locally
      - name: Build Docker Images
        run: docker compose build

      # Scan Docker images with Snyk
      - name: Scan Docker Images with Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          curl -sL https://snyk.io/install | bash
          snyk auth $SNYK_TOKEN
          snyk container test backend-fastapi || true
          snyk container test backend-nodejs || true

      # Run docker-compose locally
      - name: Run Docker Compose
        run: docker compose up -d --remove-orphans

      # Health check for backend
      - name: Health Check
        run: |
          sleep 15
          curl -f http://localhost:8000/docs || exit 1
