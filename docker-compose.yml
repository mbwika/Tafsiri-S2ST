#**********REMOTE DEPPLOYMENT******************#
#**Remember to add server access secrets on Actions**#

# services:
#   backend:
#     build: ./backend
#     container_name: tafsiri-backend
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./backend:/app
#     env_file:
#       - ./backend/.env
#     restart: always

#   frontend:
#     build: ./frontend
#     container_name: tafsiri-frontend
#     ports:
#       - "3000:3000"
#     depends_on:
#       - backend
#     restart: always

#*****LOCAL DEPLOYMENT***********************#
#**Make sure Docker is installed in the localhost**#

# services:
#   backend:
#     build:
#       context: ./backend-llms
#       dockerfile: Dockerfile.FastAPI  # Use the production Dockerfile for backend
#       # dockerfile: Dockerfile.dev  # Use the development Dockerfile for backend
#     container_name: backend-fastapi
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./backend:/app
#     env_file:
#       - ./backend/.env  # Mount the backend code to enable live-reloading
#     restart: always

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile.ReactJS  # Use the production Dockerfile
#       # dockerfile: Dockerfile.dev  # Use the development Dockerfile
#     container_name: frontend-reactjs
#     ports:
#       - "3000:80"
#     volumes:
#       - ./frontend:/app  # Mount the frontend code for live reloading
#     depends_on:
#       - backend-llms
#       - backend-login
#       - backend-database
#     restart: always

# docker-compose.yml

networks:
  tafsiri_net:
    driver: bridge

services:
  backend-fastapi:
    networks:
      - tafsiri_net
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend-fastapi
    ports:
      - "8000:8000"
    volumes: []
      # - ./backend:/app
    env_file:
      - ./backend/.env
    restart: always

  backend-nodejs:
    networks:
      - tafsiri_net
    build:
      context: ./backend
      dockerfile: Dockerfile.NodeJS
    container_name: backend-nodejs
    ports:
      - "5000:5000"
    working_dir: /login/login
    volumes:
      - ./backend:/login
      - ./backend/login/.env:/login/.env
    env_file:
      - ./backend/login/.env
    depends_on:
      backend-database:
        condition: service_started
    command: node server.js
    restart: always

  backend-database:
    networks:
      - tafsiri_net
    image: postgres:15
    container_name: backend-dbpssql
    env_file:
      - ./backend/login/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/login/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: always

  frontend-reactjs:
    networks:
      - tafsiri_net
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend-reactjs
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
    depends_on:
      backend-fastapi:
        condition: service_started
      backend-nodejs:
        condition: service_started
    restart: always

volumes:
  postgres_data:

