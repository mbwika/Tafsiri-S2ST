#**********REMOTE DEPPLOYMENT******************#
#**Remember to add server access secrets on Actions**#

# services:
#   backend:
#     build: ./backend
#     container_name: tafsiri-backend
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./backend:/app
#     env_file:
#       - ./backend/.env
#     restart: always

#   frontend:
#     build: ./frontend
#     container_name: tafsiri-frontend
#     ports:
#       - "3000:3000"
#     depends_on:
#       - backend
#     restart: always

#*****LOCAL DEPLOYMENT***********************#
#**Make sure Docker is installed in the localhost**#

# services:
#   backend:
#     build:
#       context: ./backend-llms
#       dockerfile: Dockerfile.FastAPI  # Use the production Dockerfile for backend
#       # dockerfile: Dockerfile.dev  # Use the development Dockerfile for backend
#     container_name: backend-fastapi
#     ports:
#       - "8000:8000"
#     volumes:
#       - ./backend:/app
#     env_file:
#       - ./backend/.env  # Mount the backend code to enable live-reloading
#     restart: always

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile.ReactJS  # Use the production Dockerfile
#       # dockerfile: Dockerfile.dev  # Use the development Dockerfile
#     container_name: frontend-reactjs
#     ports:
#       - "3000:80"
#     volumes:
#       - ./frontend:/app  # Mount the frontend code for live reloading
#     depends_on:
#       - backend-llms
#       - backend-login
#       - backend-database
#     restart: always


version: '3.9'

services:
  backend-fastapi:
    build:
<<<<<<< HEAD
      context: ./backend-llms
      dockerfile: Dockerfile.FastAPI
    container_name: backend-fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./backend-llms:/app
    env_file:
      - ./backend-llms/.env
=======
      context: ./backend
      dockerfile: Dockerfile.dev  # Use the development Dockerfile for backend
    container_name: backend-dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env  # Mount the backend code to enable live-reloading
>>>>>>> b745fb3fe51a0964ad4ca0c1d98c7cc49d29e4a8
    restart: always

  backend-nodejs:
    build:
      context: ./backend-login
      dockerfile: Dockerfile.NodeJS
    container_name: backend-login
    ports:
      - "3000:3000"
    volumes:
      - ./backend-login:/app
    env_file:
      - ./backend-login/.env
    depends_on:
      - backend-database
    restart: always

  backend-postgresql:
    image: postgres:15
    container_name: backend-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  frontend-reactjs:
    build:
      context: ./frontend
<<<<<<< HEAD
      dockerfile: Dockerfile.ReactJS
    container_name: frontend-reactjs
=======
      dockerfile: Dockerfile.dev  # Use the development Dockerfile
    container_name: frontend-dev
>>>>>>> b745fb3fe51a0964ad4ca0c1d98c7cc49d29e4a8
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend-llms
      - backend-login
    restart: always

volumes:
  postgres_data:
