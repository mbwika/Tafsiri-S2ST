# Stage 1: Base image for dependency installation
FROM python:3.11.7 AS base

# Set the working directory inside the container
WORKDIR /app

# Install system dependencies required for torchaudio and FFmpeg
RUN apt update && apt install -y \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Copy the requirements file early to leverage Docker cache
COPY requirements.txt .

# Install all Python dependencies, including SeamlessM4T-related libraries and tiktokenizer
RUN pip install --no-cache-dir -r requirements.txt

# Install additional tools for live-reloading (for development)
RUN pip install watchgod

# Stage 2: Cache SeamlessM4T v2 model and dependencies
FROM base AS builder
WORKDIR /cache

# Download and cache SeamlessM4T v2 model correctly
RUN python -c "from transformers import AutoProcessor, AutoModelForSpeechSeq2Seq; \
    AutoModelForSpeechSeq2Seq.from_pretrained('facebook/seamless-m4t-v2-large'); \
    AutoProcessor.from_pretrained('facebook/seamless-m4t-v2-large')"

# Stage 3: Final image
FROM base
WORKDIR /app

# Copy cached models from builder stage
COPY --from=builder /root/.cache /root/.cache

# Copy the application code
COPY . .

# Expose FastAPI's default port
EXPOSE 8000

# Start FastAPI with Uvicorn
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]


# Uncomment the following lines if you want to use a different approach for development


# # Use an official Python image for development
# FROM python:3.11.7

# # Set the working directory inside the container
# WORKDIR /app

# # Install system dependencies for torchaudio (or any other dependencies)
# RUN apt update && apt install -y \
#     ffmpeg \
#     && rm -rf /var/lib/apt/lists/*

# # Copy the requirements file and install dependencies
# COPY requirements.txt .

# # Install development dependencies (this will be cached unless requirements.txt changes)
# RUN pip install --no-cache-dir -r requirements.txt

# # Install additional tools for live-reloading, like `watchgod` (used by Uvicorn for auto-reload)
# RUN pip install watchgod

# # Copy the application code
# COPY . .

# # Expose FastAPI's default port
# EXPOSE 8000

# # Use Uvicorn with --reload to enable live-reloading in development
# CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
