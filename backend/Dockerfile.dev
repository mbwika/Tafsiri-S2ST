# Use an official Python runtime as the base image
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=Etc/UTC

# Set the working directory in the container
WORKDIR /app

# Copy the application code and requirements file
COPY ./app /app

# Install system dependencies and set timezone
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        python3 \
        python3-pip \
        ffmpeg \
        protobuf-compiler \
        tzdata && \
    ln -fs /usr/share/zoneinfo/$TZ /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy the requirements file and install dependencies
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Expose the API port
EXPOSE 8000

# Command to run the API
CMD ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000"]



# Uncomment the following lines if you want to use a different approach for development


# # Use an official Python image for development
# FROM python:3.11.7

# # Set the working directory inside the container
# WORKDIR /app

# # Install system dependencies for torchaudio (or any other dependencies)
# RUN apt update && apt install -y \
#     ffmpeg \
#     && rm -rf /var/lib/apt/lists/*

# # Copy the requirements file and install dependencies
# COPY requirements.txt .

# # Install development dependencies (this will be cached unless requirements.txt changes)
# RUN pip install --no-cache-dir -r requirements.txt

# # Install additional tools for live-reloading, like `watchgod` (used by Uvicorn for auto-reload)
# RUN pip install watchgod

# # Copy the application code
# COPY . .

# # Expose FastAPI's default port
# EXPOSE 8000

# # Use Uvicorn with --reload to enable live-reloading in development
# CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
